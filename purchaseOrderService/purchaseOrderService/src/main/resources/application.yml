service-purchase-order:
  url: ${SERVICE_PURCHASE_ORDER_URL:http://localhost:8088}
server:
  port: 8088
  name: purchase_orders_service
logging:
  file:
    path: ${LOGGER_FOLDER_LOCATION:log}
spring:
  batch:
    jdbc:
      initialize-schema: always
  sql:
    init:
      mode: always # Spring Boot >=v2.5.0
      platform: h2 # Spring Boot <v2.5.0
  datasource:
    url: jdbc:postgresql://182.22.0.4:5432/mensclothing
    username: test
    password: test
    driverClassName: org.postgresql.Driver
#    initialization-mode: always # Spring Boot <v2.5.0
#    platform: h2 # Spring Boot <v2.5.0
  jpa:
    hibernate:
      ddl-auto: none # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    open-in-view: false
#    generate-ddl: true
    defer-datasource-initialization: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    baselineOnMigrate: true
    validateOnMigrate: false
    locations: "classpath:db/mensclothing"
  spring:
    h2:
      console:
        enabled: true
        path: /h2-console
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
#  data:
#    mongodb:
#      authentication-database: admin
#      username: test
#      password: test
#      database: mongo_prueba_db
#      port: 27017
#      host: localhost
#      uri: mongodb://test:test@localhost:27017/mensclothing_mongo_db?authSource=admin
#      repositories:
#        enabled=true:




